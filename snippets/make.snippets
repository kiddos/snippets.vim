##
## base
snippet make c
	CC = gcc
	CFLAGS = -g -Wall -Wextra

	TARGET = ${1:main}

	all: $1

	%.o: %.c
		$(CC) $(CFLAGS) -c -o $@ $<

	$1: $1.o
		$(CC) $(CFLAGS) -o $@ $+

	clean:
		rm -f *.o $(TARGET)

	.PHONY: all, clean
snippet make cxx
	CXX = g++
	CXXFLAGS = -g -Wall -Wextra

	TARGET = ${1:main}

	all: $1

	%.o: %.cc
		$(CXX) $(CXXFLAGS) -c -o $@ $<

	$1: $1.o
		$(CXX) $(CXXFLAGS) -o $@ $+

	clean:
		rm -f *.o $(TARGET)

	.PHONY: all, clean
##
## proto
snippet make proto
	PROTOC = protoc
	PROTO_PATH = ${1:./src/proto}

	TARGET = $(PROTO_PATH)/${2:target}.pb.cc

	vpath %.proto $(PROTO_PATH)

	all: $(TARGET)

	.PRECIOUS: %.pb.cc
	%.pb.cc: %.proto
		$(PROTOC) -I $(PROTO_PATH) --cpp_out=$(PROTO_PATH) $<

	clean:
		rm -rf $(PROTO_PATH)/*.pb.h $(PROTO_PATH)/*.pb.cc $(TARGET)

	.PHONY: all clean
snippet make grpc
	PROTOC = protoc
	GRPC_CPP_PLUGIN = grpc_cpp_plugin
	GRPC_CPP_PLUGIN_PATH = `which $(GRPC_CPP_PLUGIN)`
	PROTO_PATH = ${1:./src/proto}

	TARGET = $(PROTO_PATH)/${2:target}.pb.cc $(PROTO_PATH)/$2.grpc.pb.cc

	vpath %.proto $(PROTO_PATH)

	all: $(TARGET)

	.PRECIOUS: %.pb.cc
	%.pb.cc: %.proto
		$(PROTOC) -I $(PROTO_PATH) --cpp_out=$(PROTO_PATH) $<

	.PRECIOUS: %.grpc.pb.cc
	%.grpc.pb.cc: %.proto
		$(PROTOC) -I $(PROTO_PATH) --grpc_out=$(PROTO_PATH) --plugin=protoc-gen-grpc=$(GRPC_CPP_PLUGIN_PATH) $<

	clean:
		rm -rf $(PROTO_PATH)/*.pb.h $(PROTO_PATH)/*.pb.cc $(TARGET)

	.PHONY: all clean
##
## print
snippet print
	print-%: ; @echo $*=$($*)
##
## if
snippet ifeq
	ifeq (${1:cond0}, ${2:cond1})
		${0}
	endif
