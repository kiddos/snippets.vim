# cs.snippets
# ===========
#
# Standard C-Sharp snippets for snipmate.
#
# Largely ported over from Visual Studio 2010 snippets plus
# a few snippets from Resharper plus a few widely known snippets.
#
# Most snippets on elements (i.e. classes, properties)
# follow suffix conventions. The order of suffixes to a snippet
# is fixed.
#
# Snippet Suffix Order
# --------------------
# 1. Access Modifiers
# 2. Class Modifiers
#
# Access Modifier Suffix Table
# ----------------------------
# + = public
# & = internal
# | = protected
# - = private
#
# Example: `cls&` expands to `internal class $1`.
# Access modifiers might be doubled to indicate
# different modifiers for get/set on properties.
# Example: `pb+-` expands to `public bool $1 { get; private set; }`
#
# Class Modifier Table
# --------------------
# ^ = static
# % = abstract
#
# Example: `cls|%` expands to `protected abstract class $1`
#
# On method and property snippets, you can directly set
# one of the common types int, string and bool, if desired,
# just by appending the type modifier.
#
# Type Modifier Table
# -------------------
# i = integer
# s = string
# b = bool
#
# Example: `pi+&` expands to `public int $1 { get; internal set; }`
#
# I'll most propably add more stuff in here like
# * List/Array constructio
# * Mostly used generics
# * Linq
# * Funcs, Actions, Predicates
# * Lambda
# * Events
#
# Feedback is welcome!
#
# Main 
# if condition
snippet if
	if (${1:true})
    {
		${0}
	}
# ternary conditional
snippet t
	${1} ? ${2} : ${0}
snippet ?
	${1} ? ${2} : ${0}
# do while loop
snippet do
	do
    {
		${0}
	} while (${1:true});
# while loop
snippet wh
	while (${1:true})
    {
		${0}
	}
# for loop
snippet for
	for (int ${1:i} = 0; $1 < ${2:count}; $1${3:++})
    {
		${0}
	}
snippet foreach
	foreach (${1:var} ${2:entry} in ${3}) {
		${0}
	}
# interfaces
snippet interface
	public interface ${1:`vim_snippets#Filename()`}
    {
		${0}
	}
snippet class
	public class ${1:`vim_snippets#Filename()`}
    {
		${0}
	}
snippet ///
	/// <summary>
	/// ${0}
	/// </summary>
